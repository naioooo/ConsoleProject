#include "EndingScene.h"

EndingScene::EndingScene()
{
}

EndingScene::~EndingScene()
{
}

void EndingScene::Enter()
{
	m_check = false;
	Draw();
}

void EndingScene::Exit()
{
	system("cls");
}

void EndingScene::Update(float elapsedTime)
{
	if (GetAsyncKeyState(VK_SPACE) & 0x8001)
	{
		m_check = true;
	}

	ChangeScene();
}

void EndingScene::Draw()
{
	SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), WHITE | (WHITE << 4));
	string str = "16 4,17 4,18 4,15 5,16 5,17 5,18 5,19 5,111 5,112 5,113 5,15 6,16 6,17 6,18 6,19 6,110 6,111 6,112 6,113 6,114 6,14 7,15 7,16 7,17 7,18 7,19 7,20 7,110 7,111 7,112 7,113 7,114 7,14 8,15 8,16 8,17 8,18 8,19 8,20 8,109 8,110 8,111 8,112 8,113 8,114 8,115 8,8 9,9 9,10 9,11 9,12 9,13 9,14 9,15 9,16 9,17 9,18 9,19 9,20 9,21 9,22 9,23 9,24 9,25 9,26 9,109 9,110 9,111 9,112 9,113 9,114 9,115 9,7 10,8 10,9 10,10 10,11 10,12 10,13 10,14 10,15 10,16 10,17 10,18 10,19 10,20 10,21 10,22 10,23 10,24 10,25 10,26 10,27 10,103 10,104 10,105 10,106 10,107 10,108 10,109 10,110 10,111 10,112 10,113 10,114 10,115 10,116 10,117 10,118 10,119 10,120 10,121 10,6 11,7 11,8 11,9 11,10 11,11 11,12 11,13 11,14 11,15 11,16 11,17 11,18 11,19 11,20 11,21 11,22 11,23 11,24 11,25 11,26 11,27 11,28 11,102 11,103 11,104 11,105 11,106 11,107 11,108 11,109 11,110 11,111 11,112 11,113 11,114 11,115 11,116 11,117 11,118 11,119 11,120 11,121 11,122 11,6 12,7 12,8 12,9 12,10 12,11 12,12 12,13 12,14 12,15 12,16 12,17 12,18 12,19 12,20 12,21 12,22 12,23 12,24 12,25 12,26 12,27 12,28 12,38 12,39 12,40 12,41 12,45 12,46 12,47 12,50 12,51 12,52 12,56 12,57 12,58 12,60 12,61 12,62 12,63 12,68 12,69 12,70 12,71 12,73 12,74 12,77 12,78 12,79 12,80 12,81 12,84 12,85 12,89 12,90 12,91 12,92 12,101 12,102 12,103 12,104 12,105 12,106 12,107 12,108 12,109 12,110 12,111 12,112 12,113 12,114 12,115 12,116 12,117 12,118 12,119 12,120 12,121 12,122 12,123 12,7 13,8 13,9 13,10 13,11 13,12 13,13 13,14 13,15 13,16 13,18 13,19 13,20 13,21 13,22 13,23 13,24 13,25 13,26 13,27 13,37 13,38 13,42 13,45 13,46 13,47 13,50 13,51 13,52 13,56 13,57 13,58 13,60 13,67 13,68 13,71 13,73 13,74 13,77 13,78 13,84 13,85 13,86 13,89 13,90 13,92 13,93 13,101 13,102 13,103 13,104 13,105 13,106 13,107 13,108 13,109 13,110 13,111 13,112 13,113 13,114 13,115 13,116 13,117 13,118 13,119 13,120 13,121 13,122 13,123 13,8 14,9 14,10 14,11 14,12 14,13 14,14 14,15 14,19 14,20 14,21 14,22 14,23 14,24 14,25 14,26 14,37 14,45 14,47 14,50 14,51 14,52 14,53 14,55 14,56 14,57 14,58 14,60 14,67 14,68 14,73 14,74 14,77 14,78 14,83 14,84 14,86 14,89 14,90 14,92 14,93 14,102 14,103 14,104 14,105 14,106 14,107 14,108 14,109 14,110 14,111 14,113 14,114 14,115 14,116 14,117 14,118 14,119 14,120 14,121 14,122 14,10 15,11 15,12 15,13 15,14 15,15 15,16 15,17 15,18 15,19 15,20 15,21 15,22 15,23 15,24 15,25 15,37 15,40 15,41 15,42 15,44 15,45 15,47 15,48 15,50 15,51 15,53 15,55 15,57 15,58 15,60 15,61 15,62 15,67 15,68 15,73 15,74 15,77 15,78 15,79 15,80 15,83 15,86 15,89 15,90 15,91 15,92 15,103 15,104 15,105 15,106 15,107 15,108 15,109 15,110 15,114 15,115 15,116 15,117 15,118 15,119 15,120 15,121 15,11 16,12 16,13 16,14 16,15 16,16 16,17 16,18 16,19 16,20 16,21 16,22 16,23 16,37 16,41 16,42 16,44 16,45 16,46 16,47 16,48 16,50 16,51 16,53 16,54 16,55 16,57 16,58 16,60 16,67 16,68 16,73 16,74 16,77 16,78 16,83 16,84 16,85 16,86 16,87 16,89 16,90 16,92 16,105 16,106 16,107 16,108 16,109 16,110 16,111 16,112 16,113 16,114 16,115 16,116 16,117 16,118 16,119 16,120 16,10 17,11 17,12 17,13 17,14 17,15 17,16 17,17 17,18 17,19 17,20 17,21 17,22 17,23 17,24 17,37 17,38 17,41 17,42 17,44 17,48 17,50 17,51 17,53 17,54 17,55 17,57 17,58 17,60 17,67 17,68 17,71 17,73 17,74 17,77 17,78 17,82 17,83 17,86 17,87 17,89 17,90 17,92 17,93 17,106 17,107 17,108 17,109 17,110 17,111 17,112 17,113 17,114 17,115 17,116 17,117 17,118 17,10 18,11 18,12 18,13 18,14 18,15 18,16 18,17 18,18 18,19 18,20 18,21 18,22 18,23 18,24 18,38 18,39 18,40 18,41 18,42 18,43 18,44 18,48 18,49 18,50 18,51 18,54 18,57 18,58 18,60 18,61 18,62 18,63 18,68 18,69 18,70 18,71 18,73 18,74 18,75 18,76 18,77 18,78 18,79 18,80 18,81 18,82 18,83 18,87 18,89 18,90 18,93 18,105 18,106 18,107 18,108 18,109 18,110 18,111 18,112 18,113 18,114 18,115 18,116 18,117 18,118 18,119 18,10 19,11 19,12 19,13 19,14 19,15 19,16 19,17 19,18 19,19 19,20 19,21 19,22 19,23 19,24 19,105 19,106 19,107 19,108 19,109 19,110 19,111 19,112 19,113 19,114 19,115 19,116 19,117 19,118 19,119 19,10 20,11 20,12 20,13 20,14 20,15 20,16 20,18 20,19 20,20 20,21 20,22 20,23 20,24 20,25 20,105 20,106 20,107 20,108 20,109 20,110 20,111 20,112 20,113 20,114 20,115 20,116 20,117 20,118 20,119 20,10 21,11 21,12 21,13 21,14 21,20 21,21 21,22 21,23 21,24 21,105 21,106 21,107 21,108 21,109 21,110 21,111 21,113 21,114 21,115 21,116 21,117 21,118 21,119 21,120 21,10 22,11 22,12 22,13 22,22 22,23 22,24 22,105 22,106 22,107 22,108 22,109 22,115 22,116 22,117 22,118 22,119 22,105 23,106 23,107 23,108 23,117 23,118 23,119 23";
	int start = 0;
	int end = 0;
	int x = 0;
	int y = 0;
	while (true)
	{
		if (str.length() < end)
			break;

		if (str[end] == ' ')
		{
			x = stoi(str.substr(start, end - start));
			start = end + 1;
		}
		else if (str[end] == ',')
		{
			y = stoi(str.substr(start, end - start));
			start = end + 1;

			gotoxy(x - 4, y);
			cout << "бс";
		}

		end++;
	}

	SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), WHITE | (BLACK << 4));
}

void EndingScene::Input()
{
}

void EndingScene::ChangeScene()
{
	if (m_check == true)
	{
		SceneManager::Instance().ChangeScene("Title");
	}
}
